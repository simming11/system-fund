[33mcommit 21e4fbf956c746690ce563beabeee8bb24adc4cc[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m
Author: simming11 <abdulazem.m13@gmail.com>
Date:   Thu Sep 12 01:49:07 2024 +0700

    ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡πâ‡∏≤login ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Å‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏•‡∏∞ ‡∏´‡∏ô‡πâ‡∏≤ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏∏‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ï‡∏£‡∏áGPA

[1mdiff --git a/src/app/page/register/register.tsx b/src/app/page/register/register.tsx[m
[1mindex d943c19..a01edb8 100644[m
[1m--- a/src/app/page/register/register.tsx[m
[1m+++ b/src/app/page/register/register.tsx[m
[36m@@ -13,9 +13,8 @@[m [mimport { format, Locale } from "date-fns";[m
 [m
 // Register Thai locale[m
 registerLocale("th", th as unknown as Locale);[m
[31m-// Register the Thai locale[m
[32m+[m
 export default function RegisterPage() {[m
[31m- [m
   const [StudentID, setStudentID] = useState<string>("");[m
   const [FirstName, setFirstName] = useState<string>("");[m
   const [LastName, setLastName] = useState<string>("");[m
[36m@@ -44,16 +43,15 @@[m [mexport default function RegisterPage() {[m
     form: ""[m
   });[m
 [m
[32m+[m[32m  const router = useRouter();[m
[32m+[m
   useEffect(() => {[m
     // Check if UserID exists in localStorage[m
     if (localStorage.getItem('UserID')) {[m
[31m-      // Redirect to another page if the user is logged in[m
[31m-      router.push('/'); // Redirect to homepage or any other page[m
[32m+[m[32m      router.push('/'); // Redirect to homepage if already logged in[m
     }[m
   }, []);[m
 [m
[31m-  const router = useRouter();[m
[31m-[m
   const handleRegister = async () => {[m
     let validationErrors = { ...errors };[m
     let hasErrors = false;[m
[36m@@ -75,72 +73,73 @@[m [mexport default function RegisterPage() {[m
       form: ""[m
     };[m
 [m
[31m-[m
[31m-[m
[31m-[m
[31m-    // Validate each field before attempting to register[m
[32m+[m[32m    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô[m
     if (!StudentID || StudentID.length < 7) {[m
[31m-      validationErrors.StudentID = "Student ID must be at least 7 characters";[m
[32m+[m[32m      validationErrors.StudentID = "‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 7 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£";[m
       hasErrors = true;[m
     }[m
 [m
     if (!PrefixName) {[m
[31m-      validationErrors.PrefixName = "PrefixName is required";[m
[32m+[m[32m      validationErrors.PrefixName = "‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô";[m
       hasErrors = true;[m
     }[m
[32m+[m
     if (!FirstName || !/^[A-Za-z‡∏Å-‡πô]+$/.test(FirstName)) {[m
[31m-      validationErrors.FirstName = "First Name must contain only letters";[m
[32m+[m[32m      validationErrors.FirstName = "‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô";[m
       hasErrors = true;[m
     }[m
[32m+[m
     if (!LastName || !/^[A-Za-z‡∏Å-‡πô]+$/.test(LastName)) {[m
[31m-      validationErrors.LastName = "Last Name must contain only letters";[m
[32m+[m[32m      validationErrors.LastName = "‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô";[m
       hasErrors = true;[m
     }[m
 [m
[31m-    if (!Email || !/^[^\s@]+@(gmail|email|tsu)\.[a-z]{2,}$/.test(Email)) {[m
[31m-      validationErrors.Email = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ Gmail, Email ‡∏´‡∏£‡∏∑‡∏≠ TSU ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô";[m
[32m+[m[32m    if (!Email || !/^[^\s@]+@(tsu\.ac\.th|TSU\.AC\.TH)$/.test(Email)) {[m
[32m+[m[32m      validationErrors.Email = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ @tsu.ac.th ‡∏´‡∏£‡∏∑‡∏≠ @TSU.AC.TH ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô";[m
       hasErrors = true;[m
     }[m
 [m
[31m-[m
     if (!Phone || !/^\d{10}$/.test(Phone)) {[m
[31m-      validationErrors.Phone = "Phone number must be a valid 10-digit number";[m
[32m+[m[32m      validationErrors.Phone = "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß 10 ‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô";[m
       hasErrors = true;[m
     }[m
[32m+[m
     if (Password.length < 6 || /[^\x00-\x7F]/.test(Password)) {[m
[31m-      validationErrors.Password = "Password must be at least 6 characters and contain only English characters";[m
[32m+[m[32m      validationErrors.Password = "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô";[m
       hasErrors = true;[m
     }[m
[32m+[m
     if (!Year_Entry) {[m
[31m-      validationErrors.Year_Entry = "Year Entry is required";[m
[32m+[m[32m      validationErrors.Year_Entry = "‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô";[m
       hasErrors = true;[m
     }[m
[32m+[m
     if (!Course) {[m
[31m-      validationErrors.Course = "Major is required";[m
[32m+[m[32m      validationErrors.Course = "‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô";[m
       hasErrors = true;[m
     }[m
[32m+[m
     if (!GPA || isNaN(Number(GPA)) || Number(GPA) < 1.00 || Number(GPA) > 4.00) {[m
[31m-      validationErrors.GPA = "Valid GPA between 1.00 and 4.00 is required";[m
[32m+[m[32m      validationErrors.GPA = "‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ (GPA) ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1.00 ‡∏ñ‡∏∂‡∏á 4.00";[m
       hasErrors = true;[m
     }[m
 [m
[31m-    // Validate Religion and DOB[m
     if (!Religion) {[m
[31m-      validationErrors.Religion = "Religion is required";[m
[32m+[m[32m      validationErrors.Religion = "‡∏®‡∏≤‡∏™‡∏ô‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô";[m
       hasErrors = true;[m
     }[m
[32m+[m
     if (!DOB) {[m
[31m-      validationErrors.DOB = "Date of Birth is required";[m
[32m+[m[32m      validationErrors.DOB = "‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô";[m
       hasErrors = true;[m
     }[m
 [m
[31m-    [m
[31m-    // Update state with validation errors[m
[32m+[m[32m    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á[m
     setErrors(validationErrors);[m
 [m
[31m-    // If there are any validation errors, prevent form submission[m
[32m+[m[32m    // ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°[m
     if (hasErrors) {[m
[31m-      setErrors({ ...validationErrors, form: "Please correct the errors above and try again." });[m
[32m+[m[32m      setErrors({ ...validationErrors, form: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á" });[m
       return;[m
     }[m
 [m
[36m@@ -148,6 +147,9 @@[m [mexport default function RegisterPage() {[m
     const yearEntryNumber = parseInt(Year_Entry, 10);[m
     const gpaNumber = parseFloat(GPA);[m
 [m
[32m+[m[32m    // Format DOB to d/m/y format for submission[m
[32m+[m[32m    const formattedDOB = DOB ? format(DOB, 'dd/MM/yyyy') : "";[m
[32m+[m
     try {[m
       const response = await ApiAuthService.registerStudent([m
         StudentID,[m
[36m@@ -159,7 +161,7 @@[m [mexport default function RegisterPage() {[m
         Phone,[m
         yearEntryNumber,[m
         Course,[m
[31m-        DOB ? DOB.toISOString() : "",  // Ensure fallback for undefined DOB[m
[32m+[m[32m        formattedDOB,  // Send formatted DOB[m
         gpaNumber,[m
         Religion[m
       );[m
[36m@@ -186,9 +188,6 @@[m [mexport default function RegisterPage() {[m
     }[m
   };[m
 [m
[31m-[m
[31m-[m
[31m-[m
   const handleStudentIDChange = (e: { target: { value: any; }; }) => {[m
     const value = e.target.value;[m
     if (/^\d*$/.test(value)) {[m
[36m@@ -219,16 +218,15 @@[m [mexport default function RegisterPage() {[m
     }[m
   };[m
 [m
[31m-   // Function to convert the selected date to Buddhist year for display[m
[31m-   const formatToBuddhistYear = (date: Date | null) => {[m
[32m+[m[32m  // Function to convert the selected date to Buddhist year for display[m
[32m+[m[32m  const formatToBuddhistYear = (date: Date | null) => {[m
     if (!date) return "";[m
     const buddhistYear = date.getFullYear() + 543;[m
     return format(date, `dd/MM/${buddhistYear}`);[m
   };[m
 [m
[31m-[m
[31m-   // Handle date change[m
[31m-   const handleDateChange = (date: Date | null) => {[m
[32m+[m[32m  // Handle date change[m
[32m+[m[32m  const handleDateChange = (date: Date | null) => {[m
     if (date) {[m
       setDOB(date);[m
       setErrors((prevErrors) => ({ ...prevErrors, DOB: "" }));[m
[36m@@ -236,7 +234,7 @@[m [mexport default function RegisterPage() {[m
       setErrors((prevErrors) => ({ ...prevErrors, DOB: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î" }));[m
     }[m
   };[m
[31m-  [m
[32m+[m
   return ([m
     <div className="bg-white min-h-screen flex flex-col">[m
       <HeaderHome />[m
[36m@@ -246,350 +244,305 @@[m [mexport default function RegisterPage() {[m
           <img src="/images/imageRegiter.png" alt="Scholarship" className="rounded-lg w-2/3 lg:w-1/2" />[m
         </div>[m
         <div className="w-full bg-white lg:w-1/2 p-4 flex justify-center mr-10">[m
[31m-  <div className="w-full">[m
[31m-    <h2 className="text-center text-3xl font-bold mb-6 text-blue-800">‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</h2>[m
[31m-[m
[31m-    {/* Form starts here */}[m
[31m-    <div className="grid grid-cols-1 lg:grid-cols-3 gap-4">[m
[31m-      [m
[31m-      {/* Student ID */}[m
[31m-      <div className="w-full">[m
[31m-  <label className="block text-gray-700 mb-1">‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï</label>[m
[31m-  <input[m
[31m-    type="text"[m
[31m-    placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï"[m
[31m-    value={StudentID}[m
[31m-    onChange={(e) => {[m
[31m-      const value = e.target.value;[m
[31m-      // Use regex to allow only numeric characters[m
[31m-      const regex = /^[0-9]*$/;[m
[31m-      if (regex.test(value)) {[m
[31m-        if (value.length > 10) {[m
[31m-          // Set error if input exceeds 10 digits[m
[31m-          setErrors((prevErrors) => ({[m
[31m-            ...prevErrors,[m
[31m-            StudentID: '‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 10 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç',[m
[31m-          }));[m
[31m-        } else {[m
[31m-          // Clear error if input is valid[m
[31m-          setErrors((prevErrors) => ({[m
[31m-            ...prevErrors,[m
[31m-            StudentID: '',[m
[31m-          }));[m
[31m-          setStudentID(value);[m
[31m-        }[m
[31m-      } else {[m
[31m-        // Set error if non-numeric characters are entered[m
[31m-        setErrors((prevErrors) => ({[m
[31m-          ...prevErrors,[m
[31m-          StudentID: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô',[m
[31m-        }));[m
[31m-      }[m
[31m-    }}[m
[31m-    className={`w-full p-3 mb-1 border ${errors.StudentID ? 'border-red-500' : 'border-gray-300'} rounded`}[m
[31m-  />[m
[31m-  {errors.StudentID && <p className="text-red-500 text-sm">{errors.StudentID}</p>}[m
[31m-</div>[m
[31m-[m
[31m-[m
[31m-[m
[31m-      {/* Year Entry */}[m
[31m-      <div className="w-full">[m
[31m-        <label className="block text-gray-700 mb-1">‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤</label>[m
[31m-        <select[m
[31m-          value={Year_Entry}[m
[31m-          onChange={(e) => setYear_Entry(e.target.value)}[m
[31m-          className={`w-full p-3 mb-1 border ${errors.Year_Entry ? 'border-red-500' : 'border-gray-300'} rounded`}[m
[31m-        >[m
[31m-          <option value="" disabled>‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤</option>[m
[31m-          {[...Array(17).keys()].map(i => ([m
[31m-            <option key={i} value={2564 + i}>{2564 + i}</option>[m
[31m-          ))}[m
[31m-        </select>[m
[31m-        {errors.Year_Entry && <p className="text-red-500 text-sm">{errors.Year_Entry}</p>}[m
[31m-      </div>[m
[31m-[m
[31m-      {/* Course */}[m
[31m-      <div className="w-full">[m
[31m-        <label className="block text-gray-700 mb-1">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≤‡∏Ç‡∏≤</label>[m
[31m-        <select[m
[31m-          value={Course}[m
[31m-          onChange={(e) => setCourse(e.target.value)}[m
[31m-          className={`w-full p-3 mb-1 border ${errors.Course ? 'border-red-500' : 'border-gray-300'} rounded`}[m
[31m-        >[m
[31m-          <option value="" disabled>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≤‡∏Ç‡∏≤</option>[m
[31m-          <option value="‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå">‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå</option>[m
[31m-          <option value="‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®">‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®</option>[m
[31m-          <option value="‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå">‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå</option>[m
[31m-        </select>[m
[31m-        {errors.Course && <p className="text-red-500 text-sm">{errors.Course}</p>}[m
[31m-      </div>[m
[31m-[m
[31m-      {/* PrefixName */}[m
[31m-      <div className="w-full">[m
[31m-        <label className="block text-gray-700 mb-1">‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤</label>[m
[31m-        <select[m
[31m-          value={PrefixName}[m
[31m-          onChange={(e) => setPrefixName(e.target.value)}[m
[31m-          className={`w-full p-3 mb-1 border ${errors.PrefixName ? 'border-red-500' : 'border-gray-300'} rounded`}[m
[31m-        >[m
[31m-          <option value="" disabled>‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤</option>[m
[31m-          <option value="‡∏ô‡∏≤‡∏¢">‡∏ô‡∏≤‡∏¢</option>[m
[31m-          <option value="‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß">‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß</option>[m
[31m-        </select>[m
[31m-        {errors.PrefixName && <p className="text-red-500 text-sm">{errors.PrefixName}</p>}[m
[31m-      </div>[m
[31m-[m
[31m-      {/* First Name */}[m
[31m-      <div className="w-full">[m
[31m-  <label className="block text-gray-700 mb-1">‡∏ä‡∏∑‡πà‡∏≠</label>[m
[31m-  <input[m
[31m-    type="text"[m
[31m-    placeholder="‡∏ä‡∏∑‡πà‡∏≠"[m
[31m-    value={FirstName}[m
[31m-    onChange={(e) => {[m
[31m-      const value = e.target.value;[m
[31m-      // Use regex to allow only alphabetic characters and spaces[m
[31m-      const regex = /^[‡∏Å-‡πôa-zA-Z\s]*$/;[m
[31m-      if (regex.test(value)) {[m
[31m-        setFirstName(value); // Set value if it's valid[m
[31m-        setErrors((prevErrors) => ({[m
[31m-          ...prevErrors,[m
[31m-          FirstName: '', // Clear error if valid[m
[31m-        }));[m
[31m-      } else {[m
[31m-        // Set error if non-alphabetic characters are entered[m
[31m-        setErrors((prevErrors) => ({[m
[31m-          ...prevErrors,[m
[31m-          FirstName: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô',[m
[31m-        }));[m
[31m-      }[m
[31m-    }}[m
[31m-    className={`w-full p-3 mb-1 border ${errors.FirstName ? 'border-red-500' : 'border-gray-300'} rounded`}[m
[31m-  />[m
[31m-  {errors.FirstName && <p className="text-red-500 text-sm">{errors.FirstName}</p>}[m
[31m-</div>[m
[31m-[m
[31m-[m
[31m-      {/* Last Name */}[m
[31m-      <div className="w-full">[m
[31m-  <label className="block text-gray-700 mb-1">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</label>[m
[31m-